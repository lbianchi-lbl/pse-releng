name: Test PyPI workflow
run-name: Test PyPI workflow (${{ inputs.target }})

on:

  workflow_dispatch:
    inputs:

      target:
        description: Target to use for PyPI workflow
        type: choice
        required: true
        options:
          - ccsi-foqus
          - idaes-pse
          # - idaes-examples
          # - idaes-ui
          # - pareto
          # - prommis
          # - watertap

      release-tag:
        description: Release tag to be used
        type: string
        required: true

jobs:

  test-ccsi-foqus:
    if: inputs.target == 'ccsi-foqus'
    name: Test PyPI for `ccsi-foqus` (no upload)
    uses: ./.github/workflows/pypi.yml
    with:
      upload: false
      release-tag: ${{ inputs.release-tag }}
      repository: CCSI-Toolset/FOQUS
      pypi-name: ccsi-foqus
      test-command: |
        foqus --help
      python-version: '3.11'
      build-command: |
        rm -r examples/ && python setup.py sdist bdist_wheel

  test-idaes-pse:
    if: inputs.target == 'idaes-pse'
    name: Test PyPI for `idaes-pse` (no upload)
    uses: ./.github/workflows/pypi.yml
    with:
      upload: false
      release-tag: ${{ inputs.release-tag }}
      repository: IDAES/idaes-pse
      pypi-name: idaes-pse
      test-command: |
        idaes get-extensions --extra petsc --verbose
        pip install pytest
        wget https://raw.githubusercontent.com/IDAES/idaes-pse/main/pytest.ini
        pytest --pyargs idaes -m "unit" -x
      python-version: '3.11'
      build-command: |
        python setup.py sdist bdist_wheel
