name: Generate release instructions using doctions
run-name: Generate release instructions for `${{ inputs.target || github.issue.number }}`

on:
  pull_request:
    types:
      - opened
      - synchronize
    paths:
      - data/**.yml

  workflow_dispatch:
    inputs:
      target:
        description: Choose one target determining which contexts file to use
        required: false
        type: choice
        options:
          - ccsi-foqus
          - idaes-examples
          - idaes-pse
          - idaes-ui
          - pareto
          - prommis
          - watertap
      workflow:
        description: Workflow ID used to determine which workflow file to use
        required: false
        type: choice
        options:
          - release

jobs:
  doctions-dispatch:
    if: ${{ github.event_name == 'workflow_dispatch' }}
    name: Run doctions for `${{ inputs.target }}` with `${{ inputs.workflow }}` workflow
    uses: ./.github/workflows/doctions.yml
    with:
      contexts-file: data/${{ inputs.target }}.yml
      workflow-file: data/workflows/${{ inputs.workflow }}.yml
      display-step-summary: 'yes'

  targets:
    if: ${{ github.event_name == 'pull_request' }}
    name: Determine file to render
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
      contents: read
    outputs:
      modified: ${{ steps.files.outputs.modified }}
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - id: files
        run: |
          relevant_files=$(gh pr view ${{ github.event.number }} --json files --jq '.files[] | select(.path|test("data/*")) | .path')
          echo "modified=${relevant_files}" >> "$GITHUB_OUTPUT"

  doctions-pr:
    needs: [targets]
    uses: ./.github/workflows/doctions.yml
    with:
      contexts-file: ${{ needs.targets.outputs.modified }}
      workflow-file: data/workflows/release.yml

  update-pr:
    needs: [doctions-pr]
    runs-on: ubuntu-latest
    permissions:
      pull_request: write
    env:
      INPUT_MARKDOWN: ${{ needs.doctions-pr.outputs.markdown }}
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              body: core.getInput('markdown'),
            })
